<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tmrTemporizador.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAxwAAAMwAAADEAAAAOwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA7AAAAxAAAAMwAAADHAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMcAAAC6AAAAegAA
        AMoAAACpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAKgAAADKAAAAegAAALoAAADHAAAAAAAAAAAAAAAAAAAAQQAAAM0AAADgAAAA+AAA
        AO8AAADgAAAA8gAAAPUAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAA
        AOAAAADgAAAA4AAAAOAAAADgAAAA9QAAAPIAAADgAAAA7wAAAPkAAADgAAAAzQAAAEIAAADjAAAAqAAA
        AGUAAABmAAAAZQAAAGUAAABmAAAAZgAAAGUAAABlAAAAZQAAAGUAAABlAAAAZQAAAGUAAABlAAAAZQAA
        AGUAAABlAAAAZQAAAGUAAABlAAAAZQAAAGUAAABmAAAAZgAAAGUAAABlAAAAZgAAAGUAAACoAAAA5AAA
        AP8AAABHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AEcAAAD/AAAA/wAAAEcAAAAAAAAAigAAAK0AAACtAAAArQAAAK0AAACtAAAArQAAAK0AAACtAAAArQAA
        AK0AAACtAAAArQAAAK0AAACtAAAArQAAAK0AAACtAAAArQAAAK0AAACtAAAArQAAAGgAAAAAAAAAAAAA
        AAAAAAAAAAAARwAAAP8AAAD/AAAARwAAAAAAAADMAAAAyQAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAA
        AJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAADeAAAAmQAA
        AAAAAAAAAAAAAAAAAAAAAABHAAAA/wAAAP8AAABHAAAAAAAAAMwAAAB6AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AK0AAACZAAAAAAAAAIMAAACrAAAAFQAAAEcAAAD/AAAA/wAAAEcAAAAAAAAAzAAAAHoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAArQAAAJkAAAAUAAAA/wAAAP8AAABmAAAARwAAAP8AAAD/AAAARwAAAAAAAADMAAAAegAA
        AAAAAAAMAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAALQAAACMAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACtAAAAmQAAAAAAAACNAAAAtQAAABgAAABHAAAA/wAAAP8AAABHAAAAAAAA
        AMwAAAB6AAAAAAAAAIAAAAD2AAAAogAAAEsAAAAOAAAAAAAAAAgAAABTAAAAugAAAPwAAAD/AAAA/wAA
        APUAAAC8AAAAbAAAABYAAAAAAAAAAAAAAK0AAACZAAAAAAAAAAAAAAAAAAAAAAAAAEcAAAD/AAAA/wAA
        AEcAAAAAAAAAzAAAAHoAAAAAAAAABAAAAFYAAAC5AAAA+gAAAP4AAADwAAAA+wAAAPgAAAClAAAARgAA
        ABoAAAAlAAAAUwAAAJcAAADoAAAA+gAAAEMAAAAAAAAArQAAAJkAAAAAAAAAGgAAADEAAAAAAAAARwAA
        AP8AAAD/AAAARwAAAAAAAADMAAAAegAAAAAAAAAAAAAAAAAAAAAAAAANAAAAPgAAAFcAAABHAAAAEAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAABEAAAADgAAAAAAAACtAAAAmQAAAAoAAADsAAAA/gAA
        AEoAAABHAAAA/wAAAP8AAABHAAAAAAAAAMwAAAB6AAAAAAAAAB8AAAAzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAADUAAABWAAAATAAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAACZAAAACgAA
        AOwAAAD+AAAASgAAAEcAAAD/AAAA/wAAAEcAAAAAAAAAzAAAAHoAAAAAAAAAcgAAAP4AAADLAAAAdAAA
        ADYAAAAZAAAALQAAAHwAAADhAAAA/gAAAPAAAAD5AAAA/wAAAOQAAACVAAAAOgAAAAAAAAAAAAAArQAA
        AJkAAAAAAAAAGgAAADAAAAAAAAAARwAAAP8AAAD/AAAARwAAAAAAAADMAAAAegAAAAAAAAAAAAAALgAA
        AJAAAADfAAAA/wAAAP8AAAD/AAAA3wAAAHwAAAAdAAAAAAAAAAMAAAAqAAAAbgAAAMMAAAD9AAAATQAA
        AAAAAACtAAAAmQAAAAAAAAAAAAAAAAAAAAAAAABHAAAA/wAAAP8AAABHAAAAAAAAAMwAAAB6AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAWAAAALgAAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABwAAAAEAAAAAAAAAK0AAACZAAAAAAAAAI0AAAC1AAAAGAAAAEcAAAD/AAAA/wAAAEcAAAAAAAAAzAAA
        AHoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAArQAAAJkAAAAUAAAA/wAAAP8AAABmAAAARwAAAP8AAAD/AAAARwAA
        AAAAAADMAAAAegAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtAAAAmQAAAAAAAACCAAAAqwAAABQAAABHAAAA/wAA
        AP8AAABHAAAAAAAAAMwAAADKAAAAmQAAAJkAAACZAAAAmQAAAJkAAACZAAAAmQAAAJkAAACZAAAAmQAA
        AJkAAACZAAAAmQAAAJkAAACZAAAAmQAAAJkAAACZAAAAmQAAAN4AAACZAAAAAAAAAAAAAAAAAAAAAAAA
        AEcAAAD/AAAA/wAAAEcAAAAAAAAAigAAAK0AAACtAAAArQAAAK0AAACtAAAArQAAAK0AAACtAAAArQAA
        AK0AAACtAAAArQAAAK0AAACtAAAArQAAAK0AAACtAAAArQAAAK0AAACtAAAArQAAAGgAAAAAAAAAAAAA
        AAAAAAAAAAAARwAAAP8AAAD/AAAARwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABHAAAA/wAAAOMAAACoAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAKgAAADkAAAAQQAAAM0AAADgAAAA4AAAAOAAAADgAAAA4AAA
        AOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAA
        AOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAAzQAAAEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////4P//B+D//wcAAAAAAAAAAD////wgAAA8IAAAPCf/
        /yAn//8AJP4fICQQAzwkAAEkJ4PxACT8HwAkAAMkJgCBPCfH+SAn//8AJ///ICAAADwgAAA8P////AAA
        AAAAAAAA//////////////////////////8=
</value>
  </data>
</root>